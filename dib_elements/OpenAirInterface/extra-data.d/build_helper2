#!/bin/bash

THIS_SCRIPT_PATH=$(dirname $(readlink -f $0))
source $THIS_SCRIPT_PATH/../build/tools/build_helper


check_install_software() {

  if ! check_supported_distribution; then
    echo_error "Your distribution $(get_distribution_release) is not supported by openair-cn"
    exit 1
  fi

  check_enable_epel_repos

  # Compilers, generators, ...
  if [[ $OS_DISTRO == "ubuntu" ]]; then
    PACKAGE_LIST="\
      autoconf  \
      automake  \
      bison     \
      build-essential \
      cmake \
      cmake-curses-gui  \
      doxygen \
      doxygen-gui\
      flex  \
      gccxml \
      gdb  \
      git \
      pkg-config \
      subversion"
  elif [[ "$OS_BASEDISTRO" == "fedora" ]]; then
    PACKAGE_LIST="\
      autoconf \
      automake \
      bison \
      $CMAKE \
      doxygen \
      flex \
      gdb \
      git \
      pkgconfig \
      subversion"
  else
    echo_fatal "$OS_DISTRO is not a supported distribution."
  fi

  $SUDO $INSTALLER install -y $PACKAGE_LIST
  if [ $? -ne 0 ]; then
    echo_fatal "Failed to install package list $PACKAGE_LIST"
  fi


  # Libraries
  if [[ $OS_DISTRO == "ubuntu" ]]; then
    PACKAGE_LIST="\
      guile-2.0-dev \
      libconfig8-dev \
      libgcrypt11-dev \
      libgmp-dev \
      libhogweed? \
      libgtk-3-dev \
      libidn2-0-dev \
      libidn11-dev \
      libmysqlclient-dev \
      libpthread-stubs0-dev \
      libsctp1 \
      libsctp-dev \
      libssl-dev \
      libtool \
      libxml2 \
      libxml2-dev \
      mscgen \
      mysql-client \
      mysql-server \
      openssl \
      check \
      python"
  elif [[ "$OS_BASEDISTRO" == "fedora" ]]; then
    PACKAGE_LIST="\
      guile-devel \
      libconfig-devel \
      libgcrypt-devel \
      gmp-devel \
      gtk3-devel \
      libidn2-devel \
      libidn-devel \
      lksctp-tools \
      lksctp-tools-devel \
      openssl-devel \
      libtool \
      libxml2 \
      libxml2-devel \
      mariadb \
      mariadb-devel \
      mariadb-server \
      mscgen \
      openssl \
      check \
      check-devel \
      python \
      nettle-devel \
      gnutls-devel"
  else
    echo_fatal "$OS_DISTRO is not a supported distribution."
  fi

  $SUDO $INSTALLER install -y $PACKAGE_LIST
  if [ $? -ne 0 ]; then
    echo_fatal "Failed to install package list $PACKAGE_LIST"
  fi

  if [[ $OS_BASEDISTRO == 'fedora' ]]; then
    $SUDO systemctl enable mariadb
    $SUDO systemctl start mariadb
  fi

  if [[ $OS_DISTRO == 'ubuntu' ]]; then
    #Remove old gnutls/nettle installation that was done from sources
    remove_nettle_from_source
    remove_gnutls_from_source
    $SUDO apt-get install -y nettle-dev nettle-bin
    $SUDO apt-get install -y libgnutls-dev
  fi

  install_freediameter_from_source 1
  install_asn1c_from_source 1
  install_libgtpnl_from_source 1

  # Networking
  if [[ $OS_DISTRO == "ubuntu" ]]; then
    PACKAGE_LIST="\
      ethtool \
      iperf \
      iproute \
      vlan \
      tshark"
  elif [[ "$OS_BASEDISTRO" == "fedora" ]]; then
    PACKAGE_LIST="\
      ethtool \
      iperf \
      iproute \
      vconfig \
      wireshark"
  else
    echo_fatal "$OS_DISTRO is not a supported distribution."
  fi

  $SUDO $INSTALLER install -y $PACKAGE_LIST
  if [ $? -ne 0 ]; then
    echo_fatal "Failed to install package list $PACKAGE_LIST"
  fi

  case "$(get_distribution_release)" in
    "ubuntu14.04")
      PACKAGE_LIST="\
        php5 \
        python-pexpect \
        libapache2-mod-php*"
      ;;
    "ubuntu16.04")
      PACKAGE_LIST="\
        php \
        python-pexpect \
        libapache2-mod-php*"
      ;;
    "fedora")
      PACKAGE_LIST="\
        python2-pexpect"
      ;;
    *)
      echo_fatal "$OS_DISTRO is not a supported distribution."
      ;;
  esac


  if [[ "$OS_DISTRO" == "ubuntu" ]]; then
    PACKAGE_LIST="\
      check \
      python-dev \
      python-pexpect \
      unzip"
  elif [[ "$OS_DISTRO" == "fedora" ]]; then
    PACKAGE_LIST="\
      check \
      check-devel \
      python-devel \
      python2-pexpect \
      unzip"
  else
    echo_fatal "$OS_DISTRO is not a supported distribution."
  fi

  $SUDO $INSTALLER install -y $PACKAGE_LIST
  if [ $? -ne 0 ]; then
    echo_fatal "Failed to install package list $PACKAGE_LIST"
  fi

  if [ $1 -eq 1 ]; then
    $SUDO $INSTALLER install -y phpmyadmin
  fi
}
